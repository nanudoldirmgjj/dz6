/*
Задание 1

Напишите функцию ucFirst(str), возвращающую строку str с заглавным первым символом.

Вам понадобятся методы строк.
*/

function ucFirst(str) {
    return `${str[0].toUpperCase()}${str.slice(1)}`;
}
ucFirst('hello');

/*
Задание 2

Напишите функцию checkSpam(str), возвращающую true, если str содержит 'badWord' или 'XXX', а иначе false.
Функция должна быть нечувствительна к регистру
*/

function checkSpam(str) {
    let down = str.toLowerCase();
    if (down.includes('badWord'.toLowerCase()) || down.includes('XXX'.toLowerCase()) ) {
        return true;
    } else {
        return false;
    }
}

checkSpam('jdfjbadWord');


/*
Задание 3

Написать функцию, которой на вход подается строка, на выход она дает символы наоборот (разворачивает строку). Пример: «привет Женя» -> «янеЖ тевирп»

Обратите внимание: метод reverse существует только у массивов.
*/

let  hello = 'hello hru';
function arr(mas) {
    return mas.split('').reverse().join('');
}
arr(hello);



/*
Задание 4

Массив содержит строки с информацией о железнодорожных станциях на севере Англии. Строки представляют собой трёхбуквенный код станции, затем некоторые машиночитаемые данные, за которыми следует точка с запятой, а затем название станции, пригодное для чтения человеком. 

let stations = [
'MAN675847583748sjt567654;Manchester Piccadilly',
'GNF576746573fhdg4737dh4;Greenfield',
'LIV5hg65hd737456236dch46dg4;Liverpool Lime Street',
'SYB4f65hf75f736463;Stalybridge',
'HUD5767ghtyfyr4536dh45dg45dg3;Huddersfield'
];

Необходимо извлечь код станции и имя и поместить их в строку со следующей структурой:

MAN: Manchester Piccadilly

Вывести эти строки в консоль

ПОДСКАЗКА:

1. Извлеките трёхбуквенный код станции и сохраните его в новой переменной.
2. Найдите номер символьного номера точки с запятой.
3. Извлеките название для чтения человеком, используя номер индекса точки с запятой в качестве контрольной точки и сохраните его в новой переменной.
4. Объедините две новые переменные из строк
*/
let stations = [
    'MAN675847583748sjt567654;Manchester Piccadilly',
    'GNF576746573fhdg4737dh4;Greenfield',
    'LIV5hg65hd737456236dch46dg4;Liverpool Lime Street',
    'SYB4f65hf75f736463;Stalybridge',
    'HUD5767ghtyfyr4536dh45dg45dg3;Huddersfield'
    ];
   
   function restructuring(mas) {

    let code = [];
    let name = [];
    for (let i = 0; i < mas.length; i++) {
    code.push(mas[i].slice(0, 3));    
    let o = (stations[i].indexOf(';') + 1);
    name.push(mas[i].slice(o));
    }
let result = [];
    for (let i = 0; i < code.length; i++) {
       result.push(`${code[i]}: ${name[i]} `)
       console.log(result[i]);
    }
   }
restructuring(stations)


/*
Задание 5
Напишите функцию unique(arr), которая принимает массив, а возвращает новый массив, содержащий только уникальные элементы arr.

Пример:
let strings = ["кришна", "кришна", "харе", "харе", "харе", "харе", "кришна", "кришна", ":-O"];
console.log(unique(strings) ); должен вывести "кришна, харе, :-O"

ПОДСКАЗКА
- создать новый массив
- обойти исходный массив, если элемент отсутствует в новом - добавлять его в новый. Таким образом в новый добавятся только уникальные.
*/
let strings = ["кришна", "кришна", "харе", "харе", "харе", "харе", "кришна", "кришна", ":-O"];
function uniq(mas){
    let newStr = [];    
    for (let i = 0; i < mas.length; i++) {
        if (!newStr.includes(mas[i]) ) {
            newStr.push(mas[i]);
        }
    }

        return newStr;
    }
    uniq(strings);




/*
Задание 6

Женя и Юля изучают кошек. Каждая из них узнала у 10 владельцев кошек о возрасте их кошки и сохранила данные в массиве (по одному массиву для каждой девочки). На данный момент им просто интересно узнать, является ли кошка взрослой или котёнком.

Кошка считается взрослой, если ей не менее 2 лет, и котёнком, если ей менее 2 лет.

Создайте функцию verifyCats, которая принимает 2 массива возрастов кошек (catsJane и catsJulia) и выполняет следующие действия:

1. Женя выяснила, что владельцы первой и последней кошки на самом деле имеют собак, а не кошек! Поэтому удалите возраст собак из Жениного массива.

2. Создайте общий массив с данными Жени (исправленными) и Юли.

3. Для каждой кошки этого общего массива выведите в консоль текст:

- если кошка взрослая -  Кошка № 1 взрослая, ей 6 лет

- если котёнок - Кошка № 2 ещё котёнок

4. Вызовите функцию для двух наборов тестовых данных.

Тестовые данные:

1.  Данные Жени [4, 5, 3, 11, 6, 2, 4, 1, 5, 9]

Данные Юли [2, 4, 5, 1, 13, 2, 15, 8, 3, 7]

2.  Данные Жени [3, 5, 9, 14, 1, 2, 6, 8, 3, 10]

Данные Юли [8, 2, 10, 1, 2, 5, 6, 3, 1, 4]

В задании необходимо использовать методы массивов: forEach, splice, concat
*/

let catsJane  = [4, 5, 3, 11, 6, 2, 4, 1, 5, 9];
let catsJulia = [2, 4, 5, 1, 13, 2, 15, 8, 3, 7];

function verifyCats(mas1, mas2) {
    mas1 = mas1.slice(1, 9);
    let allCats = mas1.concat(mas2);
    console.log(allCats);
    allCats.forEach((number, index) => {
        if (number < 2) {
            console.log(`Кошка № ${index + 1} еще котенок `)
        } else {
            console.log(`Кошка № ${index + 1} взослая, ей ${number} лет`)
        }
    });
}

verifyCats(catsJane, catsJulia);

/*
Задание 8

Решить 4 задание из прошлой темы, используя метод filter

Определить массив, например let arr = [5, 4, 3, 8, 0];
Создать функцию filterFor(arr, a). Функция должна вернуть новый массив из элементов arr, но в нем должны содержаться элементы, которые больше или равны (>=) значения переменной a.
Например, запуск функции filterFor(arr, 5) дает результат [5,8]
запуск функции filterFor(arr, 10) дает результат []
запуск функции filterFor(arr, 3.11) дает результат [4,5,8]
*/

let arr = [5, 4, 3, 8, 0];
let filterFor = (arr, a) => {
        let newArr = [];
    arr.filter(item => {
        if ( item >= a ) {
            newArr.push(item);
        } ;
       
    })
 return newArr;
}
filterFor(arr, 3.11);


/*
Задание 9

Создайте функцию getAverageHumanAge, которая принимает массив возрастов кошек (catAges) и выполняет следующие действия по порядку:
1. Рассчитывает человеческий возраст по следующей формуле: если возраст кошки <= 2 года, человеческий возраст = возраст кошки * 10. Если кошке больше 2 лет, человеческий возраст = возраст кошки * 7.
2. Исключает всех кошек младше 18 человеческих лет.
3. Возвращает средний человеческий возраст для всех взрослых кошек.
Вызовите функцию для обоих наборов тестовых данных.
Тестовые данные:
1: [7 , 3, 2, 4, 1, 15, 8, 1, 9, 2]
2: [1, 16, 12, 4, 5, 1, 3, 11, 7, 2]
В задании необходимо использовать методы массивов: map, filter, reduce
*/




const catAges = [7 , 3, 2, 4, 1, 15, 8, 1, 9, 2];
function getAverageHumanAge (arr) {

 let humanAge = arr.map(item => {
    item = (item > 2) ? item * 7 : item *10;
    return item;
 });
//  return humanAge;
 
 let adultCats = humanAge.filter(item => item > 18);
// return adultCats;

let avarageCAge = adultCats.reduce((acc, item) => acc + item, 0);
avarageCAge /= adultCats.length;
return avarageCAge;


}
getAverageHumanAge (catAges);
